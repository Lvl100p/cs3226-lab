{"version":3,"sources":["main.js"],"names":[],"mappingsfile":"all.js","sourcesContent":["jQuery(document).ready(function () {\n    var table = jQuery('#ranktable').DataTable({\n        \"paging\": false\n    });\n\n    highlightSumRow(table)\n\n    adjustRowHeightToDiff(table);\n\n    fireEventsWhenOrdered(table);\n\n    highlightHighestOfCol(table);\n});\n\nfunction highlightHighestOfCol(table){\n    table.columns().every(function(colIndex) {\n        if(colIndex <3){\n            return;\n        }\n\n        var highest = table.column(colIndex).data().sort().reverse().filter(function (item, pos, arr) {\n            // remove duplicates\n            return !pos || item != arr[pos - 1];\n        })[0];\n\n        table.rows().every(function (rowIndex) {\n            var currCell = table.cell({\n                row: rowIndex,\n                column: colIndex\n            }).node();\n\n            if(jQuery(currCell).text() == highest) {\n                jQuery(currCell).addClass(\"highest-of-column\");\n            }\n        });\n    });\n}\n\nfunction fireEventsWhenOrdered(table){\n    jQuery('#ranktable').on(\"order.dt\", function(){\n        resetRowHeight(table);\n        adjustRowHeightToDiff(table);\n    });\n}\n\nfunction resetRowHeight(table){\n    table.rows().every(function(index){\n        jQuery(this.node()).height(55.1166);\n    });\n}\n\nfunction adjustRowHeightToDiff(table){\n\n    var prevSumCell;\n    table.rows().every(function(rowIdx, tableLoop, rowLoop){\n        if(rowIdx != 0){\n            var currSumCell = table.cell({\n                row: rowIdx,\n                column: 11\n            }).node();\n\n            var gap = Math.abs(jQuery(currSumCell).text() - jQuery(prevSumCell).text());\n            var currRowHeight = jQuery(this.node()).height();\n\n            jQuery(this.node()).height(currRowHeight+gap*4);\n        }\n\n        prevSumCell = table.cell({\n            row: rowIdx,\n            column: 11\n        }).node();\n\n    });\n}\n\nfunction highlightSumRow(table){\n    var sums = table.column(11).data().sort().reverse().filter(function(item, pos, arr){\n        // remove duplicates\n        return !pos || item != arr[pos -1];\n    });\n\n    var highestSum = sums[0];\n    var secondSum = sums[1];\n    var thirdSum = sums[2];\n    var lowestSum = sums[sums.length-1];\n\n    table.rows().every(function (rowIdx, tableLoop, rowLoop) {\n        var currRow = jQuery(table.row(rowIdx).node());\n\n        var sumCell = table.cell({\n            row: rowIdx,\n            column: 11\n        }).node();\n\n        switch (jQuery(sumCell).text()){\n            case highestSum:\n                currRow.addClass(\"highest-sum\");\n                break;\n            case secondSum:\n                currRow.addClass(\"second-sum\");\n                break;\n            case thirdSum:\n                currRow.addClass(\"third-sum\");\n                break;\n            case lowestSum:\n                currRow.addClass(\"lowest-sum\");\n                break;\n        }\n    });\n}"]}